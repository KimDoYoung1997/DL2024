[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "딥러닝 (2024)",
    "section": "",
    "text": "질문하는 방법\n\n이메일: guebin@jbnu.ac.kr\n직접방문: 자연과학대학 본관 205호\nZoom: 카카오톡이나 이메일로 미리 시간을 정할 것\n\n강의노트\n\n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 8, 2022\n\n\n02wk-1: Overview (2)\n\n\n최규빈 \n\n\n\n\nSep 6, 2022\n\n\n01wk-2: Overview (1)\n\n\n최규빈 \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/01wk-1.html",
    "href": "posts/01wk-1.html",
    "title": "01wk-2: Overview (1)",
    "section": "",
    "text": "이미지자료분석(1)– 데이터저장, 학습, 기존데이터를 잘맞추는지 확인, 오답분석, 진짜 잘 맞추는게 맞을까?\n\n\n강의영상\n\nhttps://www.youtube.com/playlist?list=PLQqh36zP38-w4djJcMLe2Jgfuj5V14NPi\n\n\n\nImport\n\nfrom fastai.vision.all import * \n\n\n\n데이터저장\n\npath = untar_data(URLs.PETS)/'images'\n# URLs.PETS: 스트링 -&gt; 주소가 저장되어 있음.. -&gt; 주소로 들어가보니 어떠한 압축파일이 자동으로 다운 받아짐, 이게 데이터 \n# untar_data: (1) URLs.PETS에 저장된 주소로 찾아가서 (2) 압축을 풀어서 (3) 어떠한 폴더에 저장, 그 폴더의 위치는 path 에 저장 \n\n\n\n\n\n\n    \n      \n      100.00% [811712512/811706944 00:10&lt;00:00]\n    \n    \n\n\n\npath # 여기에 그림이 있다는 말이지?? \n\nPath('/root/.fastai/data/oxford-iiit-pet/images')\n\n\n\n# 탐색... 여러파일들이 있기는함.. \n# Abyssinian_1.jpg 를 보고싶다면? \nPILImage.create('/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_1.jpg')\n\n\n\n\n\n\n\n\n\n# Abyssinian_100.jpg 를 보고싶다면? \nPILImage.create('/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_100.jpg')\n\n\n\n\n\n\n\n\n- 그림을 확인 할 수 있는건 좋은데 이렇게 확인하니까 조금 귀찮음..\n\n_lst = ['/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_1.jpg','/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_10.jpg']\n\n\n_lst[0]\n\n'/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_1.jpg'\n\n\n\nPILImage.create(_lst[0])\n\n\n\n\n\n\n\n\n\nfiles= get_image_files(path)\nfiles\n\n(#7390) [Path('/root/.fastai/data/oxford-iiit-pet/images/scottish_terrier_92.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/leonberger_173.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/shiba_inu_120.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/Persian_26.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/yorkshire_terrier_86.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/Ragdoll_56.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/german_shorthaired_2.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/Egyptian_Mau_34.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/japanese_chin_169.jpg'),Path('/root/.fastai/data/oxford-iiit-pet/images/Abyssinian_192.jpg')...]\n\n\n\nfiles[0]\n\nPath('/root/.fastai/data/oxford-iiit-pet/images/scottish_terrier_92.jpg')\n\n\n\n#PILImage.create('/root/.fastai/data/oxford-iiit-pet/images/english_setter_59.jpg')\nPILImage.create(files[0])\n\n\n\n\n\n\n\n\n\nprint(files[2])\nPILImage.create(files[2])\n\n/root/.fastai/data/oxford-iiit-pet/images/shiba_inu_120.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[3])\nPILImage.create(files[3])\n\n/root/.fastai/data/oxford-iiit-pet/images/Persian_26.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[4])\nPILImage.create(files[4])\n\n/root/.fastai/data/oxford-iiit-pet/images/yorkshire_terrier_86.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[5])\nPILImage.create(files[5])\n\n/root/.fastai/data/oxford-iiit-pet/images/Ragdoll_56.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[6])\nPILImage.create(files[6])\n\n/root/.fastai/data/oxford-iiit-pet/images/german_shorthaired_2.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[7])\nPILImage.create(files[7])\n\n/root/.fastai/data/oxford-iiit-pet/images/Egyptian_Mau_34.jpg\n\n\n\n\n\n\n\n\n\n\nprint(files[8])\nPILImage.create(files[8])\n\n/root/.fastai/data/oxford-iiit-pet/images/japanese_chin_169.jpg\n\n\n\n\n\n\n\n\n\n\n# 특1: 대문자이면 고양이, 소문자이면 강아지그림이다!! (천재적인 저장방식)\n# 특2: 이미지크기가 서로 다르다..\n\n\ndef label_func(fname):\n  if fname[0].isupper():\n    return 'cat'\n  else:\n    return 'dog'\n\n\ndls = ImageDataLoaders.from_name_func(path,files,label_func,item_tfms=Resize(224))\n# path 경로에서 \n# files 에 해당하는 파일들을 불러와서 X를 만들고 \n# item_tfms 에 정의된 방식으로 X를 변환하여 저장한다. 그리고 \n# label_func: \"파일이름\" -&gt; \"라벨\", 에 저장된 함수내용을 바탕으로 y를 만들어 저장한다. \n# 이 모든것이 저장된 자료는 변수 dls에 저장한다. \n\n\ndls.show_batch(max_n=16)\n\n\n\n\n\n\n\n\n\n\n학습\n\n# 우리의 1차 목표: 이미지 -&gt; 개/고양이 판단하는 모형을 채용하고, 그 모형에 데이터를 넣어서 학습하고, 그 모형의 결과를 판단하고 싶다. (즉 클래시파이어를 만든다는 소리)\n# 우리의 2차 목표: 그 모형에 \"새로운\" 자료를 전달하여 이미지를 분류할 것이다. (즉 클래시파이어를 쓴다는 소리)\n\n# cnn_learner 라는 함수를 이용해서 1차목표와 2차목표를 달성할 \"썸띵(Object)\"을 만들것임. \n## 오브젝트란? 정보와 함수를 동시에 가지는 어떠한 집합체 \n# - 오브젝트.명사이름: 이것 통채로 하나의 변수처럼 쓸 수 있음. \n# - 오브젝트.동사이름: 이것 통채로 하나의 함수처럼 쓸 수 있음. (이때 함수의 첫번째 입력은 명시하지 않아도 오브젝트 그 자체가 된다)\n\n## clafr에 필요한 명사(=정보) &lt;-- 우리가 넣어줘야하는 것들이 대부분\n# (1) 모델정보: 클래시파이어로 누구를 뽑을것인가 (유명한 모델이 무엇인가? 잘 맞추는 모델이 무엇인가)\n# (2) 데이터: 데이터를 줘야함 \n# (3) 평가기준표: 채점을 할 지표 \n## clafr에 필요한 동사(=함수) &lt;-- 이미 구현이 되어있음.. \n# (1) 학습 \n# (2) 결과를 판단\n# (3) 예측 \n\nclsfr = cnn_learner(dls,resnet34,metrics=error_rate)\n# clsfr 라는 오브젝트를 만들건데.. \n# 그 오브젝트의 재료로 dls (데이터), resnet34 (데이터를 분석할 모형이름), metrics (모형의 성능을 평가할 기준) 를 넣음. \n\n/usr/local/lib/python3.7/dist-packages/fastai/vision/learner.py:284: UserWarning: `cnn_learner` has been renamed to `vision_learner` -- please update your code\n  warn(\"`cnn_learner` has been renamed to `vision_learner` -- please update your code\")\n/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.\n  f\"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, \"\n/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet34_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet34_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\nDownloading: \"https://download.pytorch.org/models/resnet34-b627a593.pth\" to /root/.cache/torch/hub/checkpoints/resnet34-b627a593.pth\n\n\n\n\n\n\nclsfr.fine_tune(1) # 학습을 하는 함수\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nerror_rate\ntime\n\n\n\n\n0\n0.189062\n0.012517\n0.006089\n01:01\n\n\n\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nerror_rate\ntime\n\n\n\n\n0\n0.051309\n0.010439\n0.003383\n00:57\n\n\n\n\n\n\n\n기존 데이터를 잘 맞추는지 확인\n\nfiles[0] # 강아지 \n\nPath('/root/.fastai/data/oxford-iiit-pet/images/scottish_terrier_92.jpg')\n\n\n\nclsfr.predict(files[0])\n\n\n\n\n\n\n\n\n('dog', TensorBase(1), TensorBase([6.8846e-07, 1.0000e+00]))\n\n\n\nfiles[7] # 고양이\n\nPath('/root/.fastai/data/oxford-iiit-pet/images/Egyptian_Mau_34.jpg')\n\n\n\nclsfr.predict(files[7])\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([1.0000e+00, 1.3773e-08]))\n\n\n\nclsfr.show_results()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n오답분석\n\ninterpreter = Interpretation.from_learner(clsfr) # 오답을 분석하는 오브젝트를 만듬.. 재료는 클래시파이어! \n\n\n\n\n\n\n\n\n\ninterpreter.plot_top_losses(16) # 오답을 분석하는 오브젝트는 가장 오류가 높은 이미지를 정렬하여 보여주는 기능이 있음..\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n진짜 잘되는게 맞는건가?\n\nclsfr.predict(files[7])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([1.0000e+00, 1.3773e-08]))\n\n\n\nclsfr.predict('/root/.fastai/data/oxford-iiit-pet/images/Egyptian_Mau_34.jpg')\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([1.0000e+00, 1.3773e-08]))\n\n\n\nclsfr.predict(PILImage.create('/root/.fastai/data/oxford-iiit-pet/images/Egyptian_Mau_34.jpg'))\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([1.0000e+00, 1.3773e-08]))\n\n\n\nPILImage.create('2022-09-06-cat1.png')\n\n\n\n\n\n\n\n\n\nclsfr.predict(PILImage.create('2022-09-06-cat1.png'))\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([1.0000e+00, 1.5662e-10]))\n\n\n\nPILImage.create('2022-09-06-cat2.jpeg')\n\n\n\n\n\n\n\n\n\nclsfr.predict(PILImage.create('2022-09-06-cat2.jpeg'))\n\n\n\n\n\n\n\n\n('cat', TensorBase(0), TensorBase([0.9809, 0.0191]))\n\n\n\nclsfr.predict(PILImage.create('2022-09-06-hani01.jpeg'))\n\n\n\n\n\n\n\n\n('dog', TensorBase(1), TensorBase([3.2573e-10, 1.0000e+00]))\n\n\n\nclsfr.predict(PILImage.create('2022-09-06-hani02.jpeg'))\n\n\n\n\n\n\n\n\n('dog', TensorBase(1), TensorBase([7.0723e-07, 1.0000e+00]))\n\n\n\nclsfr.predict(PILImage.create('2022-09-06-hani03.jpg'))\n\n\n\n\n\n\n\n\n('dog', TensorBase(1), TensorBase([0.1814, 0.8186]))\n\n\n\n\n숙제\n- 인터넷에 존재하는 개 혹은 고양이 이미지를 임의로 하나 불러온뒤 clsfr에 넣어보고 결과를 관찰하라. 관찰결과를 스크린샷하여 제출하라.\n\n숙제를 위한 예시코드\n\n# https://dimg.donga.com/ugc/CDB/SHINDONGA/Article/5e/0d/9f/01/5e0d9f011a9ad2738de6.jpg &lt;-- 인터넷의 이미지 주소\nimg=PILImage.create(requests.get('https://dimg.donga.com/ugc/CDB/SHINDONGA/Article/5e/0d/9f/01/5e0d9f011a9ad2738de6.jpg').content)\nclsfr.predict(img)\n- 숙제 못하겠으면 카톡으로 물어보세요! 답 알려드립니다.\n- 숙제는 간단하게 편한 형식으로 제출하세요. (저는 스크린샷 선호해요..) pdf나 hwp로 만드실 필요 없습니다."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/02wk-1.html",
    "href": "posts/02wk-1.html",
    "title": "02wk-1: Overview (2)",
    "section": "",
    "text": "이미지자료분석(2) 데이터정리 \\(\\to\\) lrnr \\(\\to\\) lrnr.학습() \\(\\to\\) lrnr.예측()\n\n\n강의영상\n\nhttps://youtube.com/playlist?list=PLQqh36zP38-zcq1v38u87lMmD47ujarOZ\n\n\n\nimports\n\nfrom fastai.vision.all import * \n\n\n\n지난시간 복습\n(1) 데이터의 정리\n\npath = untar_data(URLs.PETS)/'images'\n\n\nfnames = get_image_files(path)\n\n\nf = lambda fname: 'cat' if fname[0].isupper() else 'dog'\n\n\ndls = ImageDataLoaders.from_name_func(\n    path, \n    fnames,\n    f, # f대신 (lambda fname: 'cat' if fname[0].isupper() else 'dog') 를 넣어도 가능\n    item_tfms=Resize(224))\n\n(2) lrnr 오브젝트 생성\n\nlrnr = cnn_learner(dls,resnet34,metrics=error_rate)\n\n(3) lrnr.학습()\n\nlrnr.fine_tune(1)\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nerror_rate\ntime\n\n\n\n\n0\n0.152362\n0.015960\n0.004060\n00:08\n\n\n\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nerror_rate\ntime\n\n\n\n\n0\n0.066467\n0.028969\n0.008119\n00:10\n\n\n\n\n\n\nfine_tune()은 모든 가중치를 학습하는 것이 아니라 일부만 학습하는 것임.\nfine_tune()이외이 방법으로 학습할 수도 있음.\n\n(4) lrnr.예측()\n(방법1) lrnr.predict() 함수를 이용\n\nlrnr.predict('2022-09-06-hani03.jpg') # 방법1-1\n#lrnr.predict(PILImage.create('2022-09-06-hani03.jpg')) # 방법1-2\n#lrnr.predict(path.ls()[0]) # 방법1-3\n\n\n\n\n\n\n\n\n('dog', TensorBase(1), TensorBase([0.2726, 0.7274]))\n\n\n(방법2) lrnr.model(X) 를 이용: X의 shape이 (?,3,224,224)의 형태의 텐서이어야함\n\nX,y = dls.one_batch() # 방법2\nlrnr.model(X[0:1]) \n\nTensorBase([[-3.8654,  2.9234]], device='cuda:0', grad_fn=&lt;AliasBackward0&gt;)\n\n\n\n\n프로그래밍 과정 overview\n- overview\n\ndls 오브젝트 생성\nlrnr 오브젝트 생성\nlrnr.학습()\nlrnr.예측()\n\n- 비교\n\n\n\n\n\n\n\n\n\n\n회귀분석(R)\n이미지분석(CNN)\n추천시스템\n\n\n\n\n1단계\ndata.frame()\nImageDataLoaders.from_name_func()\nCollabDataLoaders.from_df()\n\n\n2단계\nNone\ncnn_learner()\ncollab_learner()\n\n\n3단계\nlm(y~x1+x2,df)\nlrnr.fine_tune(1)\nlrnr.fit()\n\n\n4단계\npredict(ob,newdf)\nlrnr.predict(), lrnr.model(X)\nlrnr.model(X)\n\n\n\n\n\n숙제\n아래의 함수들이 정의된 위치를 찾아보고 경로를 제출하라.\n\nImageDataLoaders.from_name_func\ncnn_learner\nlrnr.fine_tune\nlrnr.predict\n\n단, 여기에서 lrnr는 cnn_learner()로부터 생성된 오브젝트 이다.\n제출예시\nImageDataLoaders.from_name_func\n\n~/anaconda3/envs/py37/lib/python3.7/site-packages/fastai/vision/data.py"
  }
]